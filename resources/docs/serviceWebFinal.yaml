openapi: 3.0.0
info:
  version: 1.0.0
  title: Vehicles
  description: Structure de l'api serviceWebFinal créé dans le cadre du cours Services Web H2022
  
servers: 
  - url: http://localhost/serviceWebFinal
paths:
  /vehicles:
    get:
      tags:
        - Véhicules
      summary: Retourne tout les véhicules.
      responses:
        '200': 
          description: 
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  make:
                    type: string
                  model:
                    type: string
                  year:
                    type: year
                example:
                  id : 1
                  make : 'Ford'
                  model : 'Mustang Shelby GT500'
                  year : 1967
    post:
      tags: 
        - Véhicules
      summary: Ajout d'un véhicule.
      requestBody:
        description: Les informations du véhicule à ajouter.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  id:
                    type: integer
                  make:
                    type: string
                  model:
                    type: string
                  year:
                    type: year
              example:
                make : 'Ford'
                model : 'Mustang Shelby GT500'
                year : 1967

              
      responses:
        '201': 
          description: L'id du véhicule ajouté.
          content:
            application/json:
              schema:
                type: object
                properties:
                  vehicle_id:
                    type: integer
                example:
                  vehicle_id : 1
    delete:
      tags:
        - Véhicules
      summary: Supprime un véhicule selon son id.
      parameters:
        - name: id
          in: path
          required: true
      responses:
        '204':
          description:
          content:
  
                   
  /users:
    post:
      tags: 
        - Usagers
      summary: Création d'un usager.
      requestBody:
        description: Les informations de l'usager à créer
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              example:
                username : 'admin'
                password : 'admin123'
              
      responses:
        '201': 
          description: L'id de l'usager créé.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                example:
                  user_id : 1
        '400':
          description: Usager existe déjà.

          
  